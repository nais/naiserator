
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: applications.nais.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .metadata.labels.team
    name: Team
    type: string
  - JSONPath: .status.synchronizationState
    name: State
    type: string
  group: nais.io
  names:
    kind: Application
    plural: applications
    shortNames:
    - app
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: Application defines a NAIS application.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of
                fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like "ci-cd". The set of fields
                is always in the version that the workflow used when modifying the
                object.
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different
                      fields format and version. There is currently only one possible
                      value: "FieldsV1"'
                    type: string
                  fieldsV1:
                    description: FieldsV1 holds the first JSON version format as described
                      in the "FieldsV1" type.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: ApplicationSpec contains the NAIS manifest.
          properties:
            accessPolicy:
              properties:
                inbound:
                  properties:
                    rules:
                      items:
                        properties:
                          application:
                            type: string
                          namespace:
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  required:
                  - rules
                  type: object
                outbound:
                  properties:
                    external:
                      items:
                        properties:
                          host:
                            type: string
                          ports:
                            items:
                              properties:
                                port:
                                  format: int32
                                  type: integer
                                protocol:
                                  enum:
                                  - HTTP
                                  - HTTPS
                                  - GRPC
                                  - HTTP2
                                  - MONGO
                                  - TCP
                                  - TLS
                                  type: string
                              required:
                              - port
                              - protocol
                              type: object
                            type: array
                        required:
                        - host
                        type: object
                      type: array
                    rules:
                      items:
                        properties:
                          application:
                            type: string
                          namespace:
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  type: object
              type: object
            env:
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                  valueFrom:
                    properties:
                      fieldRef:
                        properties:
                          fieldPath:
                            enum:
                            - ""
                            - metadata.name
                            - metadata.namespace
                            - metadata.labels
                            - metadata.annotations
                            - spec.nodeName
                            - spec.serviceAccountName
                            - status.hostIP
                            - status.podIP
                            type: string
                        required:
                        - fieldPath
                        type: object
                    required:
                    - fieldRef
                    type: object
                required:
                - name
                type: object
              type: array
            envFrom:
              items:
                properties:
                  configmap:
                    type: string
                  secret:
                    type: string
                type: object
              type: array
            filesFrom:
              items:
                properties:
                  configmap:
                    type: string
                  mountPath:
                    type: string
                  secret:
                    type: string
                type: object
              type: array
            gcp:
              properties:
                buckets:
                  items:
                    properties:
                      cascadingDelete:
                        type: boolean
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                sqlInstances:
                  items:
                    properties:
                      autoBackupHour:
                        maximum: 23
                        minimum: 0
                        type: integer
                      cascadingDelete:
                        type: boolean
                      databases:
                        items:
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      diskAutore:wsize:
                        type: boolean
                      diskSize:
                        minimum: 10
                        type: integer
                      diskType:
                        enum:
                        - SSD
                        - HDD
                        type: string
                      highAvailability:
                        type: boolean
                      maintenance:
                        properties:
                          day:
                            maximum: 7
                            minimum: 1
                            type: integer
                          hour:
                            maximum: 23
                            minimum: 0
                            type: integer
                        type: object
                      name:
                        type: string
                      tier:
                        pattern: db-.+
                        type: string
                      type:
                        enum:
                        - POSTGRES_11
                        type: string
                    required:
                    - type
                    type: object
                  type: array
              type: object
            image:
              type: string
            ingresses:
              items:
                type: string
              type: array
            leaderElection:
              type: boolean
            liveness:
              description: Liveness probe and readiness probe definitions.
              properties:
                failureThreshold:
                  type: integer
                initialDelay:
                  type: integer
                path:
                  type: string
                periodSeconds:
                  type: integer
                port:
                  type: integer
                timeout:
                  type: integer
              required:
              - path
              type: object
            logformat:
              enum:
              - ""
              - accesslog
              - accesslog_with_processing_time
              - accesslog_with_referer_useragent
              - capnslog
              - logrus
              - gokit
              - redis
              - glog
              - simple
              - influxdb
              - log15
              type: string
            logtransform:
              type: string
            port:
              type: integer
            preStopHookPath:
              type: string
            prometheus:
              properties:
                enabled:
                  type: boolean
                path:
                  type: string
                port:
                  type: string
              type: object
            readiness:
              description: Liveness probe and readiness probe definitions.
              properties:
                failureThreshold:
                  type: integer
                initialDelay:
                  type: integer
                path:
                  type: string
                periodSeconds:
                  type: integer
                port:
                  type: integer
                timeout:
                  type: integer
              required:
              - path
              type: object
            replicas:
              properties:
                cpuThresholdPercentage:
                  description: Amount of CPU usage before the autoscaler kicks in.
                  type: integer
                max:
                  description: The pod autoscaler will scale deployments on demand
                    until this maximum has been reached.
                  type: integer
                min:
                  description: The minimum amount of replicas acceptable for a successful
                    deployment.
                  type: integer
              type: object
            resources:
              properties:
                limits:
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
                requests:
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
              type: object
            secureLogs:
              properties:
                enabled:
                  description: Whether or not to enable a sidecar container for secure
                    logging.
                  type: boolean
              required:
              - enabled
              type: object
            service:
              properties:
                port:
                  format: int32
                  type: integer
              required:
              - port
              type: object
            skipCaBundle:
              type: boolean
            strategy:
              properties:
                type:
                  enum:
                  - Recreate
                  - RollingUpdate
                  type: string
              required:
              - type
              type: object
            vault:
              properties:
                enabled:
                  type: boolean
                paths:
                  items:
                    properties:
                      format:
                        enum:
                        - flatten
                        - json
                        - yaml
                        - env
                        - properties
                        - ""
                        type: string
                      kvPath:
                        type: string
                      mountPath:
                        type: string
                    required:
                    - kvPath
                    - mountPath
                    type: object
                  type: array
                sidecar:
                  type: boolean
              type: object
            webproxy:
              type: boolean
          required:
          - image
          type: object
        status:
          description: ApplicationStatus contains different NAIS status properties
          properties:
            correlationID:
              type: string
            deploymentRolloutStatus:
              type: string
            rolloutCompleteTime:
              format: int64
              type: integer
            synchronizationHash:
              type: string
            synchronizationState:
              type: string
            synchronizationTime:
              format: int64
              type: integer
          type: object
      required:
      - spec
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
