syntax = "proto3";

// This file contains models used for reporting deployment events.

package deployment;

option java_package = "no.nav.protos.deployment";
option go_package = "pkg/event";

// PlatformType denotes what kind of platform are used for deploying.
enum PlatformType {
    jboss = 0;
    was = 1;
    bpm = 2;
    nais = 3;
}

// Only enumerated systems can report deployment status.
enum System {
    aura = 0;
    naisd = 1;
    naiserator = 2;
}

// RolloutStatus denotes whether a deployment has been initialized,
// rolled out successfully, or if the status is altogether unknown.
enum RolloutStatus {
    unknown = 0;
    initialized = 1;
    complete = 2;
}

// Environment separates between production and development environments.
enum Environment {
    production = 0;
    development = 1;
}

// A platform represents a place where applications and systems are deployed.
// Since platforms come in different versions and flavors, a variant can also be specified.
message Platform {
    PlatformType type = 1;
    string variant = 2;
}

// Actor is a human being or a service account.
message Actor {
    string ident = 1;
    string email = 2;
    string name = 3;
}

// ContainerImage is a reference to a image that can be deployed as a container,
// typically a Docker container inside a Kubernetes pod.
message ContainerImage {
    string name = 1;
    string tag = 2;
    string hash = 3;
}

// Event represents a deployment that has been made on any of NAV's systems.
message Event {
    // CorrelationID can be used to correlate events across different systems.
    string correlationID = 1;

    // Platform represents the technical platform on which the deployment was made.
    Platform platform = 2;

    // Source tells which system that reported the deployment.
    System source = 3;

    // Deployer is a reference to a human being that started the deployment.
    Actor deployer = 4;

    // Team is an organizational structure within NAV and refers to a group of people.
    string team = 5;

    // RolloutStatus shows the deployment status.
    RolloutStatus rolloutStatus = 6;

    // Environment can be production or development.
    Environment environment = 7;

    // The SKYA platform divides between production, development, staging, and test.
    // Furthermore, these environments are divided into smaller segments denoted with
    // a number, such as q0, t6, u11.
    string skyaEnvironment = 8;

    // Namespace represents the Kubernetes namespace this deployment was made into.
    string namespace = 9;

    // Cluster is the name of the Kubernetes cluster that was deployed to.
    string cluster = 10;

    // Application is the name of the deployed application.
    string application = 11;

    // Version is the version of the deployed application.
    string version = 12;

    // Image refers to the container source, usually a Docker image.
    ContainerImage image = 13;

    // Timestamp is the generation time of the deployment event.
    int64 timestamp = 14;
}

