testconfig:
  description: vanilla application running with linkerd, default configuration and network policies

config:
  features:
    linkerd: true
    network-policy: true
    jwker: true
    legacy-gcp: true
  google-project-id: google-project-id
  cluster-name: mycluster
  gateway-mappings:
    - domainSuffix: .adeo.no
      ingressClass: adeo-gateway
    - domainSuffix: .domain
      ingressClass: domain-gateway
  nais-namespace: nais


input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    image: navikt/myapplication:1.2.3
    ingresses:
      - 'https://myapplication.dev.adeo.no'
      - 'https://myapplication.other.domain'
    accessPolicy:
      inbound:
        rules:
          - application: app1
          - application: app2
            namespace: q1
          - application: '*'
            namespace: t1
      outbound:
        rules:
          - application: app3
          - application: app4
            namespace: q2
          - application: '*'
            namespace: t2
        external:
          - host: www.external-application.com
          - host: https://www.another-external-application.com
          - host: http://www.yet-another-external-application.com

tests:
  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication-legacy
    match:
      - name: "network policy created"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        linkerd.io/is-control-plane: "true"
            egress:
              - to:
                  - namespaceSelector:
                      matchLabels:
                        linkerd.io/is-control-plane: "true"
              - to:
                  - ipBlock:
                      cidr: 0.0.0.0/0
                      except:
                        - 10.6.0.0/15
                        - 172.16.0.0/12
                        - 192.168.0.0/16
            policyTypes:
              - Ingress
              - Egress
            podSelector:
              matchLabels:
                app: myapplication

  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    match:
      - name: "network policy created"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ingress:
              - from:
                  - podSelector:
                      matchLabels:
                        app.kubernetes.io/name: prometheus
                    namespaceSelector:
                      matchLabels:
                        name: nais
              - from:
                  - namespaceSelector:
                      matchLabels:
                        name: nginx
                    podSelector:
                      matchLabels:
                        app.kubernetes.io/instance: adeo-gateway
              - from:
                  - namespaceSelector:
                      matchLabels:
                        name: nginx
                    podSelector:
                      matchLabels:
                        app.kubernetes.io/instance: domain-gateway
              - from:
                  - podSelector:
                      matchLabels:
                        app: app1
                  - podSelector:
                      matchLabels:
                        app: app2
                    namespaceSelector:
                      matchLabels:
                        name: q1
                  - podSelector: { }
                    namespaceSelector:
                      matchLabels:
                        name: t1
            egress:
              - to:
                  - podSelector:
                      matchLabels:
                        k8s-app: kube-dns
                    namespaceSelector: { }
              - to:
                  - podSelector:
                      matchLabels:
                        app: app3
                  - podSelector:
                      matchLabels:
                        app: app4
                    namespaceSelector:
                      matchLabels:
                        name: q2
            policyTypes:
              - Ingress
              - Egress
            podSelector:
              matchLabels:
                app: myapplication
