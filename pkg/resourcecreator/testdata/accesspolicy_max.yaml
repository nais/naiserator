testconfig:
  description: vanilla application running with nais-system, default configuration and network policies
config:
  features:
    network-policy: true
  google-project-id: google-project-id
  cluster-name: mycluster
  gateway-mappings:
    - domainSuffix: .nais.io
      ingressClass: nais-ingress
    - domainSuffix: .domain
      ingressClass: nais-ingress-external
  nais-namespace: nais-system
  fqdn-policy:
    enabled: true
    rules:
      - host: "yolo.com"
        port: 80
      - host: "google.com"
        port: 443
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    image: navikt/myapplication:1.2.3
    accessPolicy:
      inbound:
        rules:
          - application: app1
          - application: app2
            namespace: q1
          - application: '*'
            namespace: t1
      outbound:
        rules:
          - application: app3
          - application: app4
            namespace: q2
          - application: '*'
            namespace: t2
        external:
          - host: www.external-application.com
          - host: www.customport.com
            ports:
              - port: 9443
              - port: 8443
          - host: https://www.withprotocol.com
          - host: http://www.anotherprotocol.com
tests:
  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    match:
      - name: "network policy created"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ingress:
              - from:
                  - podSelector:
                      matchLabels:
                        app.kubernetes.io/name: prometheus
                    namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: nais-system
                  - podSelector:
                      matchLabels:
                        app.kubernetes.io/name: alloy
                    namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: nais-system
              - from:
                  - podSelector:
                      matchLabels:
                        app: app1
                  - podSelector:
                      matchLabels:
                        app: app2
                    namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: q1
                  - podSelector: {}
                    namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: t1
            egress:
              - to:
                  - podSelector:
                      matchLabels:
                        k8s-app: kube-dns
                    namespaceSelector: {}
              - to:
                  - podSelector:
                      matchLabels:
                        app: app3
              - to:
                  - podSelector:
                      matchLabels:
                        app: app4
                    namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: q2
            policyTypes:
              - Ingress
              - Egress
            podSelector:
              matchLabels:
                app: myapplication
  - operation: CreateOrUpdate
    apiVersion: networking.gke.io/v1alpha3
    kind: FQDNNetworkPolicy
    name: myapplication-fqdn
    match:
      - name: "FQDN policy created"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
              - ports:
                  - port: 80
                    protocol: TCP
                to:
                  - fqdns:
                      - yolo.com
              - ports:
                  - port: 443
                    protocol: TCP
                to:
                  - fqdns:
                      - google.com
              - ports:
                  - port: 443
                    protocol: TCP
                to:
                  - fqdns:
                      - www.external-application.com
              - ports:
                  - port: 9443
                    protocol: TCP
                  - port: 8443
                    protocol: TCP
                to:
                  - fqdns:
                      - www.customport.com
              - ports:
                  - port: 443
                    protocol: TCP
                to:
                  - fqdns:
                      - www.withprotocol.com
              - ports:
                  - port: 443
                    protocol: TCP
                to:
                  - fqdns:
                      - www.anotherprotocol.com
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Egress
