testconfig:
  description: egress rules with tokenx enabled will create network policies and jwker resources
config:
  features:
    network-policy: true
    jwker: true
  google-project-id: google-project-id
  cluster-name: mycluster
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
  spec:
    image: foo/bar
    accessPolicy:
      outbound:
        external:
          - host: some.external.test
        rules:
          - application: foo
            namespace: bar
          - application: foo
            namespace: bar
            cluster: othercluster
    tokenx:
      enabled: true
tests:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "egress and ingress network policies"
        resource:
          spec:
            egress:
              - to:
                  - namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: bar
                    podSelector:
                      matchLabels:
                        app: foo
  - apiVersion: nais.io/v1
    kind: Jwker
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "outbound access policy rules for jwker"
        resource:
          spec:
            accessPolicy:
              outbound:
                rules:
                  - application: foo
                    cluster: mycluster
                    namespace: bar
                  - application: foo
                    cluster: othercluster
                    namespace: bar
  - apiVersion: nais.io/v1
    kind: Jwker
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: regex
        name: "auto-generated secret name"
        resource:
          spec:
            secretName: ^tokenx-myapplication-.+$
  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
      - name: "deployment contains jwker secrets as files and env"
        type: regex
        resource:
          spec:
            template:
              metadata:
                labels:
                  tokenx: enabled
              spec:
                volumes:
                  - name: ^tokenx-myapplication-.+$
                    secret:
                      secretName: ^tokenx-myapplication-.+$
                containers:
                  - envFrom:
                      - secretRef:
                          name: ^tokenx-myapplication-.+$
                    volumeMounts:
                      - name: ^tokenx-myapplication-.+$
                        readOnly: true
                        mountPath: /var/run/secrets/nais.io/jwker
