config:
  description: google storage bucket with retention period

resourceoptions:
  AccessPolicy: false
  CNRMEnabled: true
  GoogleProjectID: google-project-id
  GoogleTeamProjectID: team-project-id
  NumReplicas: 1

input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    image: navikt/myapplication:1.2.3
    gcp:
      buckets:
        - name: myapplication
          uniformBucketLevelAccess: true

tests:
  - match:
      - type: subset
        name: "common metadata"
        resource:
          metadata:
            labels:
              app: myapplication
              team: myteam
            ownerReferences:
              - apiVersion: v1alpha1
                kind: Application
                name: myapplication
                uid: "123456"

  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMServiceAccount created in namespace serviceaccounts"
        exclude:
          - .metadata.creationTimestamp
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
              nais.io/team: mynamespace
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            displayName: myapplication

  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicy
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicy created in namespace serviceaccounts"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            bindings:
              - members:
                  - serviceAccount:google-project-id.svc.id.goog[mynamespace/myapplication]
                role: roles/iam.workloadIdentityUser
            resourceRef:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMServiceAccount
              name: myapplicati-mynamespac-w4o5cwa

  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicyMember
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicyMember created in namespace mynamespace"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: team-project-id
            name: myapplicati-mynamespac-w4o5cwa
            namespace: mynamespace
          spec:
            member: serviceAccount:myapplicati-mynamespac-w4o5cwa@google-project-id.iam.gserviceaccount.com
            role: roles/storage.objectViewer
            resourceRef:
              apiVersion: storage.cnrm.cloud.google.com/v1beta1
              kind: StorageBucket
              name: myapplication

  - apiVersion: storage.cnrm.cloud.google.com/v1beta1
    kind: StorageBucket
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "Storage bucket created in team namespace"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
              cnrm.cloud.google.com/state-into-spec: merge
            name: myapplication
            namespace: mynamespace
          spec:
            location: europe-north1
            uniformBucketLevelAccess: true

  - apiVersion: apps/v1
    kind: Deployment
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "deployment created"
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata
        resource:
          spec:
            template:
              spec:
                containers:
                  - image: navikt/myapplication:1.2.3
                    env:
                      - name: GCP_TEAM_PROJECT_ID
                        value: team-project-id
                dnsPolicy: ClusterFirst
                imagePullSecrets:
                  - name: gh-docker-credentials
                restartPolicy: Always
                serviceAccountName: myapplication
