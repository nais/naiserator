testconfig:
  description: google storage bucket with retention period

config:
  features:
    access-policy: false
    cnrm: true
  google-project-id: google-project-id

input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    image: navikt/myapplication:1.2.3
    gcp:
      buckets:
        - name: myapplication
          retentionPeriodDays: 7
          lifecycleCondition:
            age: 7
            createdBefore: 2019-01-01
            numNewerVersions: 2
            withState: ANY

existing:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: mynamespace
      annotations:
        cnrm.cloud.google.com/project-id: team-project-id

tests:
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMServiceAccount created in namespace serviceaccounts"
        exclude:
          - .metadata.creationTimestamp
        resource:
          metadata:
            name: myapplication
            namespace: mynamespace
          spec:
            displayName: myapplication
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicy
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicy created in namespace serviceaccounts"
        resource:
          metadata:
            name: myapplication
            namespace: mynamespace
          spec:
            bindings:
              - members:
                  - serviceAccount:team-project-id.svc.id.goog[mynamespace/myapplication]
                role: roles/iam.workloadIdentityUser
            resourceRef:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMServiceAccount
              name: myapplication
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicyMember
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicyMember created in namespace mynamespace"
        resource:
          metadata:
            name: myapplication
            namespace: mynamespace
          spec:
            member: serviceAccount:myapplication@team-project-id.iam.gserviceaccount.com
            role: roles/storage.objectViewer
            resourceRef:
              apiVersion: storage.cnrm.cloud.google.com/v1beta1
              kind: StorageBucket
              name: myapplication
  - apiVersion: storage.cnrm.cloud.google.com/v1beta1
    kind: StorageBucket
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "Storage bucket created in team namespace"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
            name: myapplication
            namespace: mynamespace
          spec:
            location: europe-north1
            retentionPolicy:
              retentionPeriod: 604800
            lifecycleRule:
              - action:
                  type: Delete
                condition:
                  age: 7
                  createdBefore: 2019-01-01
                  numNewerVersions: 2
                  withState: ANY
  - apiVersion: storage.cnrm.cloud.google.com/v1beta1
    kind: StorageBucketAccessControl
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "Storage bucket ACL created in team namespace"
        resource:
          metadata:
            name: myapplication
            namespace: mynamespace
          spec:
            bucketRef:
              name: myapplication
            entity: user-myapplication@team-project-id.iam.gserviceaccount.com
            role: OWNER
  - apiVersion: apps/v1
    kind: Deployment
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "deployment created"
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata
        resource:
          spec:
            template:
              spec:
                containers:
                  - image: navikt/myapplication:1.2.3
                    env:
                      - name: GCP_TEAM_PROJECT_ID
                        value: team-project-id
                dnsPolicy: ClusterFirst
                imagePullSecrets:
                  - name: gh-docker-credentials
                restartPolicy: Always
                serviceAccountName: myapplication