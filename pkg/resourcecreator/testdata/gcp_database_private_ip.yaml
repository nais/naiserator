testconfig:
  description: google cloud sql instances provisioned with databases and automatic configuration with pre-existing private ip
config:
  features:
    gcp: true
    cnrm: true
    sql-instance-in-shared-vpc: true
  google-project-id: google-project-id
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    image: navikt/myapplication:1.2.3
    gcp:
      sqlInstances:
        - databases:
            - name: mydb
              users:
                - name: extra
          type: POSTGRES_17
          tier: db-f1-micro
existing:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: mynamespace
      annotations:
        cnrm.cloud.google.com/project-id: team-project-id
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLInstance
    metadata:
      annotations:
        cnrm.cloud.google.com/deletion-policy: abandon
        cnrm.cloud.google.com/project-id: team-project-id
      name: myapplication
      namespace: mynamespace
    spec:
      databaseVersion: POSTGRES_17
      region: europe-north1
      settings:
        availabilityType: ZONAL
        backupConfiguration:
          enabled: true
          startTime: "02:00"
        ipConfiguration:
          requireSsl: true
          privateNetworkRef:
            external: projects/some-other-project-id/global/networks/nais-vpc
        diskAutoresize: false
        diskSize: 10
        diskType: PD_SSD
        tier: db-f1-micro
        insightsConfig:
          queryInsightsEnabled: true
          recordApplicationTags: false
          recordClientAddress: false
tests:
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLInstance
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "SQLInstance created in team namespace"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
            name: myapplication
            namespace: mynamespace
          spec:
            databaseVersion: POSTGRES_17
            region: europe-north1
            settings:
              availabilityType: ZONAL
              backupConfiguration:
                enabled: true
                startTime: "02:00"
              ipConfiguration:
                requireSsl: true
              diskAutoresize: false
              diskSize: 10
              diskType: PD_SSD
              tier: db-f1-micro
              insightsConfig:
                queryInsightsEnabled: true
                recordApplicationTags: false
                recordClientAddress: false
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLDatabase
    operation: CreateOrUpdate
    name: myapplication-mydb-ff391fe0
    match:
      - type: subset
        name: "sql database created"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
            name: mydb
            namespace: mynamespace
          spec:
            instanceRef:
              name: myapplication
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLUser
    operation: CreateIfNotExists
    name: myapplication
    match:
      - type: subset
        name: "sql user"
        resource:
          metadata:
            name: myapplication
            namespace: mynamespace
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
          spec:
            instanceRef:
              name: myapplication
            host: ""
            password:
              valueFrom:
                secretKeyRef:
                  name: google-sql-myapplication
                  key: NAIS_DATABASE_MYAPPLICATION_MYDB_PASSWORD
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLUser
    operation: CreateIfNotExists
    name: myapplication-mydb-extra
    match:
      - type: subset
        name: "extra sql user"
        resource:
          metadata:
            name: myapplication-mydb-extra
            namespace: mynamespace
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
          spec:
            instanceRef:
              name: myapplication
            host: ""
            password:
              valueFrom:
                secretKeyRef:
                  name: google-sql-myapplication-mydb-extra-4d7c8582
                  key: NAIS_DATABASE_EXTRA_MYDB_PASSWORD
  - apiVersion: apps/v1
    kind: Deployment
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "deployment created"
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata
        resource:
          spec:
            template:
              spec:
                dnsPolicy: ClusterFirst
                restartPolicy: Always
                serviceAccountName: myapplication
                containers:
                  - name: myapplication
                    image: navikt/myapplication:1.2.3
                    envFrom:
                      - secretRef:
                          name: google-sql-myapplication
                    env:
                      - name: GOOGLE_CLOUD_PROJECT
                        value: team-project-id
                      - name: GCP_TEAM_PROJECT_ID
                        value: team-project-id
                  - name: cloudsql-proxy
                    command:
                      - /cloud-sql-proxy
                      - --max-sigterm-delay
                      - 30s
                      - --port
                      - "5432"
                      - team-project-id:europe-north1:myapplication
                    ports:
                      - containerPort: 5432
                        protocol: TCP
                    resources:
                      limits:
                        memory: 256Mi
                      requests:
                        cpu: 50m
                        memory: 32Mi
                    imagePullPolicy: IfNotPresent
                    securityContext:
                      allowPrivilegeEscalation: false
                      runAsUser: 2
