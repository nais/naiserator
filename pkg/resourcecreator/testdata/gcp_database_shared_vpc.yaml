testconfig:
  description: google cloud sql instances provisioned with databases and automatic configuration in a shared vpc
config:
  features:
    cnrm: true
    linkerd: true
    sql-instance-in-shared-vpc: true
  google-project-id: google-project-id
  cluster-name: test-cluster
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    image: navikt/myapplication:1.2.3
    gcp:
      sqlInstances:
        - databases:
            - name: mydb
              users:
                - name: extra
          type: POSTGRES_11
          name: myinstance
          tier: db-f1-micro
existing:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: mynamespace
      annotations:
        cnrm.cloud.google.com/project-id: team-project-id
tests:
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMServiceAccount created in namespace serviceaccounts"
        exclude:
          - .metadata.creationTimestamp
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
              nais.io/team: mynamespace
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            displayName: myapplication
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicy
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicy created in namespace serviceaccounts"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            bindings:
              - members:
                  - serviceAccount:google-project-id.svc.id.goog[mynamespace/myapplication]
                role: roles/iam.workloadIdentityUser
            resourceRef:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMServiceAccount
              name: myapplicati-mynamespac-w4o5cwa
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLInstance
    operation: CreateOrUpdate
    name: myinstance
    match:
      - type: subset
        name: "SQLInstance created in team namespace"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
              cnrm.cloud.google.com/state-into-spec: merge
            name: myinstance
            namespace: mynamespace
          spec:
            databaseVersion: POSTGRES_11
            region: europe-north1
            settings:
              availabilityType: ZONAL
              backupConfiguration:
                enabled: true
                startTime: "02:00"
              ipConfiguration:
                requireSsl: true
                privateNetworkRef:
                  external: projects/google-project-id/global/networks/nais-vpc
              diskAutoresize: false
              diskSize: 10
              diskType: PD_SSD
              tier: db-f1-micro
              insightsConfig:
                queryInsightsEnabled: true
                recordApplicationTags: false
                recordClientAddress: false
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicyMember
    operation: CreateIfNotExists
    name: myinstance
    match:
      - type: subset
        name: "iam policy member created"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: team-project-id
            name: myapplication
            namespace: mynamespace
          spec:
            role: roles/cloudsql.client
            resourceRef:
              apiVersion: ""
              kind: Project
              name: ""
            member: serviceAccount:myapplicati-mynamespac-w4o5cwa@google-project-id.iam.gserviceaccount.com
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLDatabase
    operation: CreateOrUpdate
    name: myapplication-mydb-ff391fe0
    match:
      - type: subset
        name: "sql database created"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
            name: mydb
            namespace: mynamespace
          spec:
            instanceRef:
              name: myinstance
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLUser
    operation: CreateIfNotExists
    name: myinstance
    match:
      - type: subset
        name: "sql user"
        resource:
          metadata:
            name: myinstance
            namespace: mynamespace
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
              sqeletor.nais.io/env-var-prefix: NAIS_DATABASE_MYINSTANCE_MYDB
              sqeletor.nais.io/database-name: mydb
          spec:
            instanceRef:
              name: myinstance
            host: ""
            password:
              valueFrom:
                secretKeyRef:
                  name: google-sql-myapplication
                  key: NAIS_DATABASE_MYINSTANCE_MYDB_PASSWORD
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLUser
    operation: CreateIfNotExists
    name: myapplication-mydb-extra
    match:
      - type: subset
        name: "extra sql user"
        resource:
          metadata:
            name: myapplication-mydb-extra
            namespace: mynamespace
            annotations:
              cnrm.cloud.google.com/deletion-policy: abandon
              cnrm.cloud.google.com/project-id: team-project-id
              sqeletor.nais.io/env-var-prefix: NAIS_DATABASE_EXTRA_MYDB
              sqeletor.nais.io/database-name: mydb
          spec:
            instanceRef:
              name: myinstance
            host: ""
            password:
              valueFrom:
                secretKeyRef:
                  name: google-sql-myapplication-mydb-extra-4d7c8582
                  key: NAIS_DATABASE_EXTRA_MYDB_PASSWORD
  - apiVersion: sql.cnrm.cloud.google.com/v1beta1
    kind: SQLSSLCert
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "sql ssl cert"
        resource:
          metadata:
            name: myapplication-myinstance
            namespace: mynamespace
            annotations:
              cnrm.cloud.google.com/project-id: team-project-id
              sqeletor.nais.io/secret-name: sqeletor-myinstance-4f09a88b
          spec:
            commonName: myapplication.test-cluster
            instanceRef:
              name: myinstance
              namespace: mynamespace
  - apiVersion: apps/v1
    kind: Deployment
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "deployment created"
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata
        resource:
          spec:
            template:
              spec:
                dnsPolicy: ClusterFirst
                restartPolicy: Always
                serviceAccountName: myapplication
                volumes:
                  - name: sqeletor-sql-ssl-cert
                    secret:
                      secretName: sqeletor-myinstance-4f09a88b
                containers:
                  - name: myapplication
                    image: navikt/myapplication:1.2.3
                    envFrom:
                      - secretRef:
                          name: google-sql-myapplication
                    env:
                      - name: GOOGLE_CLOUD_PROJECT
                        value: team-project-id
                      - name: GCP_TEAM_PROJECT_ID
                        value: team-project-id
                    volumeMounts:
                      - mountPath: /var/run/secrets/nais.io/sqlcertificate
                        name: sqeletor-sql-ssl-cert
                        readOnly: true
