config:
  description: minimal idporten config in application spec should result in idportenclient with generated defaults

resourceoptions:
  AccessPolicy: true
  GoogleProjectID: google-project-id
  NumReplicas: 1
  ClusterName: mycluster
  DigdiratorEnabled: true
  DigdiratorServiceEntryHosts:
    - dev.difi.test

input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    labels:
      team: myteam
  spec:
    image: foo/bar
    idporten:
      enabled: true
    ingresses:
      - "https://my-client.nav.no/"

tests:
  - apiVersion: nais.io/v1
    kind: IDPortenClient
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "spec contains expected fields with defaults and nothing else"
        exclude:
          - .status
          - .metadata
          - .spec.secretName
        resource:
          spec:
            redirectURI: "https://my-client.nav.no/oauth2/callback"
            frontchannelLogoutURI: "https://my-client.nav.no/oauth2/logout"
  - apiVersion: nais.io/v1
    kind: IDPortenClient
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: regex
        name: "secret name is generated"
        resource:
          spec:
            secretName: ^idporten-myapplication-.{8}$

  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
    - name: "deployment contains idporten secrets"
      type: regex
      resource:
        spec:
          template:
            spec:
              volumes:
              - name: ^idporten-myapplication-.+$
                secret:
                  secretName: ^idporten-myapplication-.+$
              containers:
              - envFrom:
                - secretRef:
                    name: ^idporten-myapplication-.+$
                volumeMounts:
                - name: ^idporten-myapplication-.+$
                  readOnly: true
                  mountPath: /var/run/secrets/nais.io/idporten

  - operation: CreateOrUpdate
    apiVersion: networking.istio.io/v1alpha3
    kind: ServiceEntry
    name: myapplication-01
    match:
    - name: "service entry created for outbound traffic to id-porten"
      type: exact
      exclude:
        - .metadata
      resource:
        spec:
          hosts:
            - dev.difi.test
          location: MESH_EXTERNAL
          resolution: DNS
          ports:
            - number: 443
              protocol: HTTPS
              name: https
          exportTo:
            - "."
