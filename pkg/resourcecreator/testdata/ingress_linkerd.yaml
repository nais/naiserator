testconfig:
  description: ingress resource is created on-premises

config:
  features:
    linkerd: true
  gateway-mappings:
    - domainSuffix: .bar
      ingressClass: very-nginx
    - domainSuffix: .baz
      ingressClass: something-else

input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    annotations:
      nginx.ingress.kubernetes.io/foo: bar
      whatever.ingress.kubernetes.io/test: foo
    uid: "123456"
    labels:
      team: myteam
  spec:
    ingresses:
      - https://baz.bar
      - https://foo.bar
      - https://foo.bar/baz
      - https://bar.baz/
      - https://bar.baz/foo
      - https://bar.baz/trailingslash/

existing:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: mynamespace
      annotations:
        linkerd.io/inject: enabled

tests:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    name: myapplication-very-nginx-e55d5da0
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "ingress for foo.bar created with linkerd config"
        exclude:
          - .status
          - .metadata.creationTimestamp
          - .metadata.ownerReferences
          - .metadata.labels
          - .metadata.name
          - .metadata.namespace
        resource:
          metadata:
            annotations:
              nais.io/deploymentCorrelationID: ""
              prometheus.io/path: ""
              prometheus.io/scrape: "true"
              nginx.ingress.kubernetes.io/foo: bar
              nginx.ingress.kubernetes.io/use-regex: "true"
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
          spec:
            ingressClassName: "very-nginx"
            rules:
              - host: baz.bar
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /
                      pathType: ImplementationSpecific
              - host: foo.bar
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /
                      pathType: ImplementationSpecific
              - host: foo.bar
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /baz(/.*)?
                      pathType: ImplementationSpecific

  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    name: myapplication-something-else-f697018e
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "ingress for bar.baz created with linkerd config"
        exclude:
          - .status
          - .metadata.creationTimestamp
          - .metadata.ownerReferences
          - .metadata.labels
          - .metadata.name
          - .metadata.namespace
        resource:
          metadata:
            annotations:
              nais.io/deploymentCorrelationID: ""
              prometheus.io/path: ""
              prometheus.io/scrape: "true"
              nginx.ingress.kubernetes.io/foo: bar
              nginx.ingress.kubernetes.io/use-regex: "true"
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
          spec:
            ingressClassName: "something-else"
            rules:
              - host: bar.baz
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /
                      pathType: ImplementationSpecific
              - host: bar.baz
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /foo(/.*)?
                      pathType: ImplementationSpecific
              - host: bar.baz
                http:
                  paths:
                    - backend:
                        service:
                          name: myapplication
                          port:
                            number: 80
                      path: /trailingslash(/.*)?
                      pathType: ImplementationSpecific
