testconfig:
  description: vanilla application running in GCP with default configuration and access policies

config:
  features:
    network-policy: true
  nais-namespace: nais-system
  google-project-id: google-project-id
  api-server-ip: "172.16.0.2/32"

input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    leaderElection: true
    image: navikt/myapplication:1.2.3

tests:
  - apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "deployment created with leader election args"
        resource:
          spec:
            template:
              spec:
                containers:
                  - name: "myapplication"
                  - name: "elector"
                    image: "gcr.io/google_containers/leader-elector:0.5"
                    args:
                      - "--election=myapplication"
                      - "--http=localhost:4040"
                      - "--election-namespace=mynamespace"
                    ports:
                      - protocol: "TCP"
                        containerPort: 4040
                    resources:
                      requests:
                        cpu: "100m"
                    imagePullPolicy: "IfNotPresent"
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "Role created"
        exclude:
          - .metadata
          - .status
        resource:
          rules:
            - apiGroups:
                - ""
              resourceNames:
                - myapplication
              resources:
                - endpoints
              verbs:
                - get
                - update
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    name: myapplication
    operation: CreateOrRecreate
    match:
      - type: subset
        name: "RoleBinding created"
        exclude:
          - .metadata
          - .status
        resource:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: myapplication
          subjects:
            - kind: ServiceAccount
              name: myapplication
              namespace: mynamespace
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "NetworkPolicy with access to api-server created"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
              - to:
                  - namespaceSelector: {}
                    podSelector:
                      matchLabels:
                        k8s-app: kube-dns
              - to:
                  - ipBlock:
                      cidr: 172.16.0.2/32
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        name: nais-system
                    podSelector:
                      matchLabels:
                        app.kubernetes.io/name: prometheus
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Ingress
              - Egress
