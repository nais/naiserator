testconfig:
  description: vanilla application running in GCP, using elector for leader election
config:
  features:
    network-policy: true
  nais-namespace: nais-system
  google-project-id: google-project-id
  api-server-ip: "172.16.0.2/32"
  leader-election:
    image: "nais/elector:latest"
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    leaderElection: true
    image: navikt/myapplication:1.2.3
tests:
  - apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "deployment created with leader election args"
        resource:
          spec:
            template:
              spec:
                containers:
                  - name: "myapplication"
                    env:
                      - name: "ELECTOR_PATH"
                        value: "localhost:4040"
                      - name: "ELECTOR_GET_URL"
                        value: "http://localhost:4040/"
                      - name: "ELECTOR_SSE_URL"
                        value: "http://localhost:4040/sse"
                initContainers:
                  - name: "elector"
                    image: "nais/elector:latest"
                    args:
                      - "--election=myapplication"
                      - "--http=localhost:4040"
                      - "--election-namespace=mynamespace"
                    ports:
                      - protocol: "TCP"
                        containerPort: 4040
                    resources:
                      requests:
                        cpu: "100m"
                    restartPolicy: "Always"
                    imagePullPolicy: "IfNotPresent"
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    name: elector-myapplication-40c4e812
    operation: CreateOrRecreate
    match:
      - type: subset
        name: "RoleBinding created"
        exclude:
          - .metadata
          - .status
        resource:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: elector
          subjects:
            - kind: ServiceAccount
              name: myapplication
              namespace: mynamespace
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "NetworkPolicy with access to api-server created"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
              - to:
                  - namespaceSelector: {}
                    podSelector:
                      matchLabels:
                        k8s-app: kube-dns
              - to:
                  - ipBlock:
                      cidr: 172.16.0.2/32
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: nais-system
                    podSelector:
                      matchLabels:
                        app.kubernetes.io/name: prometheus
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Ingress
              - Egress
