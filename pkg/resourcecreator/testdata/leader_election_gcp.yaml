config:
  description: vanilla application running in GCP with default configuration and access policies

resourceoptions:
  Linkerd: true
  NetworkPolicy: true
  AccessPolicyNotAllowedCIDRs: ["10.6.0.0/15", "192.168.0.0/16", "172.16.0.0/12"]
  GoogleProjectID: google-project-id
  NumReplicas: 1
  ApiServerIp: "172.16.0.2/32"


input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    leaderElection: true
    image: navikt/myapplication:1.2.3

tests:
  - apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "deployment created with leader election args"
        resource:
          spec:
            template:
              spec:
                containers:
                  - name: "elector"
                    image: "gcr.io/google_containers/leader-elector:0.5"
                    args:
                      - "--election=myapplication"
                      - "--http=localhost:4040"
                      - "--election-namespace=mynamespace"
                    ports:
                      - protocol: "TCP"
                        containerPort: 4040
                    resources:
                      requests:
                        cpu: "100m"
                    imagePullPolicy: "IfNotPresent"
                  - name: "myapplication"
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "Role created"
        exclude:
          - .metadata
          - .status
        resource:
          rules:
          - apiGroups:
            - ""
            resourceNames:
            - myapplication
            resources:
            - endpoints
            verbs:
            - get
            - update
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    name: myapplication
    operation: CreateOrRecreate
    match:
      - type: subset
        name: "RoleBinding created"
        exclude:
          - .metadata
          - .status
        resource:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: myapplication
          subjects:
          - kind: ServiceAccount
            name: myapplication
            namespace: mynamespace
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: subset
        name: "NetworkPolicy with access to api-server created"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
            - to:
              - namespaceSelector:
                  matchLabels:
                    linkerd.io/is-control-plane: "true"
              - namespaceSelector: { }
                podSelector:
                  matchLabels:
                    k8s-app: kube-dns
              - ipBlock:
                  cidr: 0.0.0.0/0
                  except:
                  - 10.6.0.0/15
                  - 192.168.0.0/16
                  - 172.16.0.0/12
            - to:
              - ipBlock:
                  cidr: 172.16.0.2/32
            ingress:
            - from:
              - namespaceSelector:
                  matchLabels:
                    name: nais
                podSelector:
                  matchLabels:
                    app: prometheus
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
            - Ingress
            - Egress
