testconfig:
  description: azure application with access policies
config:
  features:
    azurerator: true
  cluster-name: mycluster
input:
  kind: Naisjob
  apiVersion: nais.io/v1
  metadata:
    name: mynaisjob
    namespace: mynamespace
  spec:
    schedule: "* 2 * * *"
    image: foo/bar
    azure:
      application:
        enabled: true
        tenant: nav.no
        claims:
          groups:
            - id: "some-group-id"
    accessPolicy:
      inbound:
        rules:
          - application: app1
          - application: app2
            namespace: q1
          - application: app3
            namespace: t1
            cluster: other-cluster
tests:
  - apiVersion: batch/v1
    kind: CronJob
    name: mynaisjob
    match:
      - name: "cronjob contains azure secrets"
        type: regex
        resource:
          spec:
            jobTemplate:
              spec:
                template:
                  spec:
                    volumes:
                      - name: ^azure-mynaisjob-0fe7b27f-.{6,7}$
                        secret:
                          secretName: ^azure-mynaisjob-0fe7b27f-.{6,7}$
                    containers:
                      - envFrom:
                          - secretRef:
                              name: ^azure-mynaisjob-0fe7b27f-.{6,7}$
                        volumeMounts:
                          - name: ^azure-mynaisjob-0fe7b27f-.{6,7}$
                            readOnly: true
                            mountPath: /var/run/secrets/nais.io/azure
  - apiVersion: nais.io/v1
    kind: AzureAdApplication
    name: mynaisjob
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "spec is populated with correct values"
        exclude:
          - .status
          - .metadata
          - .spec.secretName
        resource:
          apiVersion: nais.io/v1
          kind: AzureAdApplication
          spec:
            preAuthorizedApplications:
              - application: app1
                cluster: mycluster
                namespace: mynamespace
              - application: app2
                cluster: mycluster
                namespace: q1
              - application: app3
                cluster: other-cluster
                namespace: t1
            tenant: nav.no
            claims:
              groups:
                - id: "some-group-id"
