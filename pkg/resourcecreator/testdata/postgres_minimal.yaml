testconfig:
  description: minimal postgresql provisioned with databases and automatic configuration
config:
  features:
    postgres-operator: true
  google-project-id: google-project-id
  postgres:
    storage-class: premium-rwo
    image: nais-io/postgres-image:1.2.3
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    image: navikt/myapplication:1.2.3
    postgres:
      clusterName: my-postgres-cluster
existing:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: mynamespace
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: pg-mynamespace
tests:
  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: pg-myapplication
    namespace: mynamespace
    match:
      - name: "source to postgres network policy created"
        type: subset
        resource:
          spec:
            egress:
              - to:
                  - namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: pg-mynamespace
                    podSelector:
                      matchLabels:
                        application: db-connection-pooler
                        cluster-name: my-postgres-cluster
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Egress
  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: my-postgres-cluster-pooler
    namespace: pg-mynamespace
    match:
      - name: "postgres pooler network policy created"
        type: subset
        resource:
          spec:
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: mynamespace
                    podSelector:
                      matchLabels:
                        app: myapplication
            podSelector:
              matchLabels:
                application: db-connection-pooler
                cluster-name: my-postgres-cluster

  - apiVersion: apps/v1
    kind: Deployment
    operation: CreateOrUpdate
    name: myapplication
    match:
      - type: subset
        name: "deployment created"
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata
        resource:
          spec:
            template:
              spec:
                dnsPolicy: ClusterFirst
                restartPolicy: Always
                serviceAccountName: myapplication
                containers:
                  - name: myapplication
                    image: navikt/myapplication:1.2.3
                    env:
                      - name: PGHOST
                        value: my-postgres-cluster-pooler.pg-mynamespace
                      - name: PGPORT
                        value: "5432"
                      - name: PGDATABASE
                        value: app
                      - name: PGUSER
                        valueFrom:
                          secretKeyRef:
                            name: app-owner-user.my-postgres-cluster.credentials.postgresql.acid.zalan.do
                            key: username
                      - name: PGPASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: app-owner-user.my-postgres-cluster.credentials.postgresql.acid.zalan.do
                            key: password
                      - name: PGURL
                        value: "postgresql://$(PGUSER):$(PGPASSWORD)@my-postgres-cluster-pooler.pg-mynamespace:5432/app"
                      - name: PGJDBCURL
                        value: "jdbc:postgresql://my-postgres-cluster-pooler.pg-mynamespace:5432/app?user=$(PGUSER)&password=$(PGPASSWORD)"