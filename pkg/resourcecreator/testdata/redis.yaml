testconfig:
  description: Redis labeling and access policy

config:
  linkerd: true
  google-project-id: google-project-id
  cluster-name: dev-localtest
  aiven-project: dev-project

input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    redis:
    - instance: naistest1
      access: read
    - instance: naistest2
      access: write


tests:
  - operation: CreateOrUpdate
    apiVersion: aiven.nais.io/v1
    kind: AivenApplication
    name: myapplication
    match:
      - type: regex
        name: "secret name is generated"
        resource:
          spec:
            secretName: ^aiven-myapplication-.{8}-\d{4}-\d\d?$
      - name: "instance and access is propagated"
        type: subset
        resource:
          spec:
            redis:
            - instance: naistest1
              access: read
            - instance: naistest2
              access: write
  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
      - type: regex
        name: "deployment network policy selector label"
        resource:
          spec:
            template:
              metadata:
                  aiven: "enabled"
              spec:
                containers:
                  - name: "myapplication"
                    env:
                      - name: REDIS_USERNAME_NAISTEST1
                        valueFrom:
                          secretKeyRef:
                            key: REDIS_USERNAME_NAISTEST1
                            name: ^aiven-myapplication-.{8}-\d{4}-\d\d?$
                      - name: REDIS_PASSWORD_NAISTEST1
                        valueFrom:
                          secretKeyRef:
                            key: REDIS_PASSWORD_NAISTEST1
                            name: ^aiven-myapplication-.{8}-\d{4}-\d\d?$
                      - name: REDIS_URI_NAISTEST1
                        valueFrom:
                          secretKeyRef:
                            key: REDIS_URI_NAISTEST1
                            name: ^aiven-myapplication-.{8}-\d{4}-\d\d?$
  - operation: CreateIfNotExists
    apiVersion: aiven.io/v1alpha1
    kind: Redis
    name: redis-mynamespace-naistest1
    match:
      - type: subset
        name: redis created
        resource:
          metadata:
            name: redis-mynamespace-naistest1
            namespace: mynamespace
              app: myapplication
          spec:
            plan: startup-4
            project: dev-project
  - operation: CreateIfNotExists
    apiVersion: aiven.io/v1alpha1
    kind: Redis
    name: redis-mynamespace-naistest2
    match:
      - type: subset
        name: redis created
        resource:
          metadata:
            name: redis-mynamespace-naistest2
            namespace: mynamespace
              app: myapplication
          spec:
            plan: startup-4
            project: dev-project
