testconfig:
  description: vanilla application with default configuration
config:
  features:
    network-policy: true
  nais-namespace: nais-system
  aiven-range: 1.2.3.4/32
  google-project-id: google-project-id
  fqdn-policy:
    enabled: true
    rules:
      - host: "yolo.com"
        port: 80
      - host: "google.com"
        port: 443
input:
  kind: Application
  apiVersion: nais.io/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    image: navikt/myapplication:1.2.3
tests:
  - apiVersion: v1
    kind: Service
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "service created with tcp port 80"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ports:
              - port: 80
                targetPort: http
                name: http
                protocol: TCP
            selector:
              app: myapplication
            type: ClusterIP
  - operation: CreateIfNotExists
    apiVersion: v1
    kind: ServiceAccount
    name: myapplication
    match:
      - type: subset
        name: "service account created with google IaM annotation"
        resource:
          metadata:
            annotations:
              iam.gke.io/gcp-service-account: myapplicati-mynamespac-w4o5cwa@google-project-id.iam.gserviceaccount.com
  - operation: CreateOrUpdate
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    match:
      - type: exact
        name: "hpa created with 2-4 replicas and 50% cpu threshold"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            scaleTargetRef:
              kind: Deployment
              name: myapplication
              apiVersion: apps/v1
            minReplicas: 2
            maxReplicas: 4
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: 50
  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    match:
      - name: "network policy created with only system services"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
              - to:
                  - namespaceSelector: {}
                    podSelector:
                      matchLabels:
                        k8s-app: kube-dns
              - to:
                  - ipBlock:
                      cidr: 1.2.3.4/32
            ingress:
              - from:
                  - namespaceSelector:
                      matchLabels:
                        kubernetes.io/metadata.name: nais-system
                    podSelector:
                      matchLabels:
                        app.kubernetes.io/name: prometheus
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Ingress
              - Egress
  - operation: CreateOrUpdate
    apiVersion: networking.gke.io/v1alpha3
    kind: FQDNNetworkPolicy
    name: myapplication-fqdn
    match:
      - name: "FQDN policy created"
        type: exact
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            egress:
              - ports:
                  - port: 80
                    protocol: TCP
                to:
                  - fqdns:
                      - yolo.com
              - ports:
                  - port: 443
                    protocol: TCP
                to:
                  - fqdns:
                      - google.com
            podSelector:
              matchLabels:
                app: myapplication
            policyTypes:
              - Egress
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMServiceAccount created in namespace serviceaccounts"
        exclude:
          - .metadata.creationTimestamp
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
              nais.io/team: mynamespace
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            displayName: myapplication
  - apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMPolicy
    operation: CreateIfNotExists
    match:
      - type: subset
        name: "IAMPolicy created in namespace serviceaccounts"
        resource:
          metadata:
            annotations:
              cnrm.cloud.google.com/project-id: google-project-id
            name: myapplicati-mynamespac-w4o5cwa
            namespace: serviceaccounts
          spec:
            bindings:
              - members:
                  - serviceAccount:google-project-id.svc.id.goog[mynamespace/myapplication]
                role: roles/iam.workloadIdentityUser
            resourceRef:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMServiceAccount
              name: myapplicati-mynamespac-w4o5cwa
  - operation: CreateOrUpdate
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    name: myapplication
    match:
      - type: exact
        name: "pdb created with 1 max unavailable"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            maxUnavailable: 1
            selector:
              matchLabels:
                app: myapplication
            unhealthyPodEvictionPolicy: AlwaysAllow
  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
      - type: subset
        name: "prestophook set"
        resource:
          spec:
            template:
              spec:
                containers:
                  - name: myapplication
                    lifecycle:
                      preStop:
                        sleep:
                          seconds: 5
      - type: subset
        name: "replicas set to 2"
        resource:
          spec:
            replicas: 2
      - type: subset
        name: "pod created with safe-to-evict annotation"
        resource:
          spec:
            template:
              metadata:
                annotations:
                  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      - type: subset
        name: "restricted securitycontext"
        resource:
          spec:
            template:
              spec:
                containers:
                  - name: myapplication
                    securityContext:
                      runAsUser: 1069
                      runAsGroup: 1069
                      allowPrivilegeEscalation: false
                      runAsNonRoot: true
                      privileged: false
                      capabilities:
                        drop: ["ALL"]
