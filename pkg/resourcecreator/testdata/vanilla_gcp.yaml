config:
  description: vanilla application running in GCP with default configuration and access policies

resourceoptions:
  AccessPolicy: true
  GoogleProjectID: google-project-id
  NumReplicas: 1

input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    image: navikt/myapplication:1.2.3

tests:
  - match:
      - type: subset
        name: "common metadata"
        resource:
          metadata:
            labels:
              app: myapplication
              team: myteam
            ownerReferences:
              - apiVersion: v1alpha1
                kind: Application
                name: myapplication
                uid: "123456"

  - apiVersion: v1
    kind: Service
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "service created with tcp port 80"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ports:
              - port: 80
                targetPort: http
                name: http
                protocol: TCP
            selector:
              app: myapplication
            type: ClusterIP

  - operation: CreateIfNotExists
    apiVersion: v1
    kind: ServiceAccount
    name: myapplication
    match:
      - type: subset
        name: "service account created with google IaM annotation"
        resource:
          metadata:
            annotations:
              iam.gke.io/gcp-service-account: myapplicati-mynamespac-w4o5cwa@google-project-id.iam.gserviceaccount.com

  - operation: CreateOrUpdate
    apiVersion: v1
    kind: HorizontalPodAutoscaler
    match:
      - type: exact
        name: "hpa created with 2-4 replicas and 50% cpu threshold"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            scaleTargetRef:
              kind: Deployment
              name: myapplication
              apiVersion: apps/v1
            minReplicas: 2
            maxReplicas: 4
            targetCPUUtilizationPercentage: 50

  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    match:
      - name: "network policy created with only system services"
        type: exact
        exclude:
          - .metadata
        resource:
          spec:
            ingress:
              - from:
                  - podSelector:
                      matchLabels:
                        app: prometheus
                    namespaceSelector:
                      matchLabels:
                        name: istio-system
            egress:
              - to:
                  - podSelector:
                      matchLabels:
                        istio: istiod
                    namespaceSelector:
                      matchLabels:
                        name: istio-system
                  - podSelector:
                      matchLabels:
                        istio: pilot
                    namespaceSelector:
                      matchLabels:
                        name: istio-system
                  - podSelector:
                      matchLabels:
                        istio: mixer
                    namespaceSelector:
                      matchLabels:
                        name: istio-system
                  - namespaceSelector:
                      matchLabels:
                        name: istio-system
                    podSelector:
                      matchLabels:
                        istio: ingressgateway
                  - podSelector:
                      matchLabels:
                        k8s-app: kube-dns
                    namespaceSelector: {}
                  - ipBlock:
                      cidr: 0.0.0.0/0
            policyTypes:
              - Ingress
              - Egress
            podSelector:
              matchLabels:
                app: myapplication
