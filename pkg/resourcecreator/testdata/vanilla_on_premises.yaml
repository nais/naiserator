config:
  description: vanilla minimal application running on-premises with default configuration

resourceOptions:
  NumReplicas: 1
  ClusterName: test-cluster
  SecurePodSecurityContext: true

input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    annotations:
      nais.io/deploymentCorrelationID: corr
    labels:
      team: myteam
  spec:
    image: navikt/myapplication:1.2.3

tests:
  - match:
      - type: subset
        name: "common metadata"
        resource:
          metadata:
            annotations:
              nais.io/deploymentCorrelationID: corr
            labels:
              app: myapplication
              team: myteam
            ownerReferences:
              - apiVersion: v1alpha1
                kind: Application
                name: myapplication
                uid: "123456"

  - apiVersion: v1
    kind: Service
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "service created with tcp port 80"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ports:
              - port: 80
                targetPort: http
                name: http
                protocol: TCP
            selector:
              app: myapplication
            type: ClusterIP

  - operation: CreateIfNotExists
    apiVersion: v1
    kind: ServiceAccount
    name: myapplication
    match:
      - type: subset
        name: "service account created"
        resource: { }

  - operation: CreateOrUpdate
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    match:
      - type: exact
        name: "hpa created with 2-4 replicas and 50% cpu threshold"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            scaleTargetRef:
              kind: Deployment
              name: myapplication
              apiVersion: apps/v1
            minReplicas: 2
            maxReplicas: 4
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: 50

  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
      - name: "deployment created"
        type: exact
        exclude:
          - .metadata
          - .status
          - .spec.template.metadata.creationTimestamp
        resource:
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: myapplication
            template:
              metadata:
                ownerReferences:
                  - apiVersion: v1alpha1
                    kind: Application
                    name: myapplication
                    uid: "123456"
                name: myapplication
                namespace: mynamespace
                labels:
                  team: myteam
                  app: myapplication
              spec:
                volumes:
                  - name: ca-bundle-jks
                    configMap:
                      name: ca-bundle-jks
                  - configMap:
                      name: ca-bundle-pem
                    name: ca-bundle-pem
                  - emptyDir: {}
                    name: writable-tmp
                containers:
                  - ports:
                      - protocol: TCP
                        name: http
                        containerPort: 8080
                    securityContext:
                      runAsUser: 1069
                      runAsGroup: 1069
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      privileged: false
                      capabilities:
                        drop: ["all"]
                    env:
                      - name: NAV_TRUSTSTORE_PATH
                        value: /etc/ssl/certs/java/cacerts
                      - name: NAV_TRUSTSTORE_PASSWORD
                        value: changeme
                      - name: NAIS_APP_NAME
                        value: myapplication
                      - name: NAIS_NAMESPACE
                        value: mynamespace
                      - name: NAIS_APP_IMAGE
                        value: navikt/myapplication:1.2.3
                      - name: NAIS_CLUSTER_NAME
                        value: test-cluster
                      - name: NAIS_CLIENT_ID
                        value: test-cluster:mynamespace:myapplication
                    resources:
                      limits:
                        cpu: 500m
                        memory: 512Mi
                      requests:
                        cpu: 200m
                        memory: 256Mi
                    volumeMounts:
                      - name: ca-bundle-jks
                        readOnly: true
                        mountPath: /etc/ssl/certs/java/cacerts
                        subPath: ca-bundle.jks
                      - subPath: ca-bundle.pem
                        name: ca-bundle-pem
                        readOnly: true
                        mountPath: /etc/ssl/certs/ca-certificates.crt
                      - subPath: ca-bundle.pem
                        name: ca-bundle-pem
                        readOnly: true
                        mountPath: /etc/pki/tls/certs/ca-bundle.crt
                      - readOnly: true
                        mountPath: /etc/ssl/ca-bundle.pem
                        subPath: ca-bundle.pem
                        name: ca-bundle-pem
                      - readOnly: true
                        mountPath: /etc/pki/tls/cacert.pem
                        subPath: ca-bundle.pem
                        name: ca-bundle-pem
                      - name: ca-bundle-pem
                        readOnly: true
                        mountPath: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
                        subPath: ca-bundle.pem
                      - mountPath: /tmp
                        name: writable-tmp
                    lifecycle:
                      preStop:
                        exec:
                          command:
                            - sleep
                            - "5"
                    imagePullPolicy: IfNotPresent
                    name: myapplication
                    image: navikt/myapplication:1.2.3
                restartPolicy: Always
                dnsPolicy: ClusterFirst
                serviceAccountName: myapplication
                imagePullSecrets:
                  - name: gh-docker-credentials
            strategy:
              type: RollingUpdate
              rollingUpdate:
                maxUnavailable: 0
                maxSurge: "25%"
            revisionHistoryLimit: 3
            progressDeadlineSeconds: 300

  - operation: CreateOrUpdate
    apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    name: myapplication
    match:
      - type: exact
        name: "pdb created with 1 max unavailable"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            maxUnavailable: 1
            selector:
              matchLabels:
                app: myapplication
