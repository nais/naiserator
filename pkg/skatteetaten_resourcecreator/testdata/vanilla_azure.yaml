config:
  description: vanilla application running in Azure with default configuration and access policies

resourceoptions:
  NumReplicas: 1
  SkattUsePullSecret: true
  SecurePodSecurityContext: true
  AzureDomainName: "istio.nebula.dev.skatteetaten.io"

input:
  kind: Application
  apiVersion: nebula.skatteetaten.no/v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
  spec:
    pod:
      image: navikt/myapplication:1.2.3

tests:
  - match:
      - type: subset
        name: "common metadata"
        resource:
          metadata:
            labels:
              app: myapplication
            ownerReferences:
              - apiVersion: nebula.skatteetaten.no/v1alpha1
                kind: Application
                name: myapplication
                uid: "123456"

  - operation: CreateOrUpdate
    apiVersion: security.istio.io/v1beta1
    kind: AuthorizationPolicy
    name: myapplication
    match:
      - name: "network policy created with only system services"
        type: exact
        exclude:
          - .metadata
        resource:
          spec:
            action: ALLOW
            rules:
              - from:
                - source:
                    principals:
                    - cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
                to:
                  - operation:
                      ports:
                        - "8080"
            selector:
              matchLabels:
                app: myapplication

  - operation: CreateOrUpdate
    apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    name: myapplication
    match:
      - name: "network policy created with only system services"
        type: exact
        exclude:
          - .metadata
        resource:
          spec:
            gateways:
             - istio-system/istio-ingress-gateway
            hosts:
             - myapplication-mynamespace.istio.nebula.dev.skatteetaten.io
            http:
              - route:
                  - destination:
                      host: myapplication.mynamespace.svc.cluster.local
                      port:
                        number: 80
                    weight: 0

  - operation: CreateOrUpdate
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    name: myapplication
    match:
      - name: "network policy created with only system services"
        type: exact
        exclude:
          - .metadata
        resource:
          spec:
            egress:
              - ports:
                  - port: 53
                    protocol: UDP
                to:
                  - namespaceSelector:
                      matchLabels:
                        name: kube-system
                    podSelector:
                      matchLabels:
                        k8s-app: kube-dns
              - ports:
                  - port: 53
                    protocol: UDP
              - to:
                  - namespaceSelector:
                      matchLabels:
                        name: istio-system
                    podSelector:
                      matchLabels:
                        app: istiod
                        istio: pilot
              - to:
                  - ipBlock:
                      cidr: 127.0.0.1/32
            ingress:
                - from:
                    - namespaceSelector:
                        matchLabels:
                          name: istio-system
                      podSelector:
                        matchLabels:
                          app: prometheus
                          component: server
                  ports:
                    - port: 15020
                      protocol: TCP
                - from:
                    - namespaceSelector:
                        matchLabels:
                          name: istio-system
                      podSelector:
                        matchLabels:
                          app: istio-ingressgateway
                          istio: ingressgateway
                  ports:
                    - port: 8080
                      protocol: TCP
            podSelector:
                matchLabels:
                  app: myapplication

  - apiVersion: v1
    kind: Service
    name: myapplication
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "service created with tcp port 80"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            ports:
              - port: 80
                targetPort: http
                name: http
                protocol: TCP
            selector:
              app: myapplication
            type: ClusterIP

  - operation: CreateOrUpdate
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    match:
      - type: exact
        name: "hpa created with 2-4 replicas and 50% cpu threshold"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            scaleTargetRef:
              kind: Deployment
              name: myapplication
              apiVersion: apps/v1
            minReplicas: 2
            maxReplicas: 4
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: 50


  - operation: CreateOrUpdate
    apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    name: myapplication
    match:
      - type: exact
        name: "pdb created with 1 max unavailable"
        exclude:
          - .metadata
          - .status
        resource:
          spec:
            maxUnavailable: 1
            selector:
              matchLabels:
                app: myapplication

  - operation: CreateOrUpdate
    apiVersion: apps/v1
    kind: Deployment
    name: myapplication
    match:
      - type: subset
        name: "restricted securitycontext"
        resource:
          spec:
            replicas: 2
            template:
              spec:
                containers:
                  - securityContext:
                      runAsUser: 1069
                      runAsGroup: 1069
                      allowPrivilegeEscalation: false
                      runAsNonRoot: true
                      privileged: false
                      capabilities:
                        drop: ["all"]

